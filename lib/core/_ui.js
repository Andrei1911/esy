// Generated by CoffeeScript 1.7.1
Esy.ui = (function() {
  function ui() {
    this.sizes = {};
    this.window = null;
    this.currentPanel = null;
    this.panels = [];
    this.rows = [];
    this.buttons = [];
    this.textbox = [];
    this.xOffset = 0;
    this.yOffset = 0;
  }

  ui.prototype.set = function(width, paddingLeft, paddingTop) {
    if (width == null) {
      width = 300;
    }
    if (paddingLeft == null) {
      paddingLeft = 10;
    }
    if (paddingTop == null) {
      paddingTop = 10;
    }
    this.sizes.paddingLeft = paddingLeft;
    this.sizes.paddingTop = paddingTop;
    this.sizes.width = width;
    this.sizes.heightIncrement = 0;
    if (esy.container instanceof Panel) {
      this.window = esy.container;
    } else {
      this.window = new Window("window {orientation: 'column'}");
    }
    return this;
  };

  ui.prototype.show = function() {
    if (!(esy.container instanceof Panel)) {
      this.window.show();
    }
    return this;
  };

  ui.prototype.addRow = function(data) {
    var element, elementType, elements, height, values, width, _i, _len;
    height = 0;
    width = 0;
    for (_i = 0, _len = data.length; _i < _len; _i++) {
      elements = data[_i];
      for (elementType in elements) {
        element = elements[elementType];
        values = this.returnGoodUIValues(element.height != null ? element.height : element.height = 30, element.width != null ? element.width : element.width = 100);
        if (height === 0) {
          height += element.height;
        }
        switch (elementType) {
          case "button":
            this.addButton(element.label, values);
        }
      }
    }
    this.currentPanel.height += height;
    return this;
  };

  ui.prototype.addPanel = function(label) {
    var values;
    values = this.returnGoodUIValues(60, this.sizes.width);
    this.panels[label] = this.currentPanel = this.window.add('panel', values, label);
    return this;
  };

  ui.prototype.getPanel = function(label) {
    return this.panels[label];
  };

  ui.prototype.addButton = function(label, values) {
    this.buttons[label] = this.window.add('button', values, label);
    return this;
  };

  ui.prototype.getButton = function(label) {
    return this.buttons[label];
  };

  ui.prototype.addTextbox = function(label, showLabel, height, offsets) {
    if (showLabel == null) {
      showLabel = false;
    }
    if (height == null) {
      height = 30;
    }
    if (offsets == null) {
      offsets = [10, 10, -10, 0];
    }
    this.textbox[label] = this.window.add('editText', this.returnGoodUIValues(height, false, offsets), "");
    return this;
  };

  ui.prototype.getTextbox = function(label) {
    return this.textbox[label];
  };

  ui.prototype.returnGoodUIValues = function(height, width, adaptSizes) {
    var i, key, sizes, value, values, _ref;
    if (adaptSizes == null) {
      adaptSizes = [0, 0, 0, 0];
    }
    sizes = [];
    i = 0;
    _ref = this.sizes;
    for (key in _ref) {
      value = _ref[key];
      sizes[key] = value + adaptSizes[i];
      i++;
    }
    values = [sizes.paddingLeft, sizes.paddingTop + this.sizes.heightIncrement, sizes.width / (100 / width), sizes.paddingTop + this.sizes.heightIncrement + height];
    return values;
  };

  return ui;

})();
