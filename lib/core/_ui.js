// Generated by CoffeeScript 1.7.1
var EsyUIWindowRow, EsyUi, EsyUiPanel, EsyUiWindow;

EsyUi = (function() {
  function EsyUi() {
    this.sizes = {};
    this.window = null;
    this.currentPanel = null;
    this.panels = [];
    this.rows = [];
    this.buttons = [];
    this.textbox = [];
  }

  EsyUi.prototype.set = function() {
    var window;
    window = new EsyUiWindow;
    return window;
  };

  EsyUi.prototype.show = function() {
    return this;
  };

  return EsyUi;

})();

EsyUiWindow = (function() {
  function EsyUiWindow() {
    this.sizes = {
      paddingLeft: 10,
      paddingTop: 10,
      width: 300,
      heightIncrement: 0
    };
    this.element = null;
    this.render();
    return this;
  }

  EsyUiWindow.prototype.render = function() {
    if (esy.container instanceof Panel) {
      return this.element = esy.container;
    } else {
      return this.element = new Window("window {orientation: 'row'}");
    }
  };

  EsyUiWindow.prototype.addPanel = function(data) {
    return new EsyUiPanel(this, data);
  };

  return EsyUiWindow;

})();

EsyUiPanel = (function() {
  function EsyUiPanel(window, data) {
    this.window = window;
    this.element = null;
    this.data = data;
    this.yOffset = 0;
    this.render();
    return this;
  }

  EsyUiPanel.prototype.render = function() {
    var values;
    values = [this.window.sizes.paddingLeft, this.window.sizes.heightIncrement, this.window.sizes.width, 60];
    this.element = this.window.element.add('panel', values, this.data.label);
    return this;
  };

  EsyUiPanel.prototype.addRow = function(data) {
    return new EsyUIWindowRow(this, data);
  };

  return EsyUiPanel;

})();

EsyUIWindowRow = (function() {
  function EsyUIWindowRow(panel, data) {
    this.panel = panel;
    this.data = data;
    this.render();
    return this.panel;
  }

  EsyUIWindowRow.prototype.render = function() {
    var currentPanel, element, elementType, elements, height, paddingLeft, paddingTop, values, width, xOffset, yOffset, _i, _len, _ref;
    currentPanel = this.panel.element;
    height = 30;
    width = 100;
    paddingLeft = 10;
    paddingTop = 10;
    xOffset = currentPanel.margins[0];
    yOffset = currentPanel.margins[1] + this.panel.yOffset;
    esy.log("yOffset = " + yOffset);
    _ref = this.data;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      elements = _ref[_i];
      esy.log("currentPanel.margins[0] = " + currentPanel.margins[0]);
      for (elementType in elements) {
        element = elements[elementType];
        if (element.height == null) {
          element.height = height;
        }
        if (element.width == null) {
          element.width = width;
        }
        values = [paddingLeft + xOffset, paddingTop + yOffset, currentPanel.size[0] * element.width / 100 + xOffset - currentPanel.margins[0], paddingTop + element.height + yOffset];
        xOffset = currentPanel.size[0] * (element.width / 100) + xOffset;
        this.panel.yOffset += paddingTop + currentPanel.margins[1] + element.height;
        switch (elementType) {
          case "button":
            this.addButton(element.label, values);
        }
      }
    }
    currentPanel.size[1] += element.height;
    return this;
  };

  EsyUIWindowRow.prototype.addButton = function(label, values) {
    this.panel.window.element.add('button', values, label);
    return this;
  };

  EsyUIWindowRow.prototype.getButton = function(label) {
    return this.buttons[label];
  };

  EsyUIWindowRow.prototype.addTextbox = function(label, values) {
    return this.window.add('editText', values, label);
  };

  return EsyUIWindowRow;

})();
