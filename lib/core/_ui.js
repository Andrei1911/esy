// Generated by CoffeeScript 1.7.1
var EsyUi, EsyUiButton, EsyUiPanel, EsyUiRow, EsyUiTextbox, EsyUiWindow;

EsyUi = (function() {
  function EsyUi() {}

  EsyUi.prototype.set = function() {
    var window;
    window = new EsyUiWindow;
    return window;
  };

  EsyUi.prototype.show = function() {
    return this;
  };

  return EsyUi;

})();

EsyUiWindow = (function() {
  function EsyUiWindow() {
    this.element = null;
    this.render();
    return this;
  }

  EsyUiWindow.prototype.render = function() {
    if (esy.container instanceof Panel) {
      return this.element = esy.container;
    } else {
      return this.element = new Window("window {orientation: 'row'}");
    }
  };

  EsyUiWindow.prototype.addPanel = function(data) {
    return new EsyUiPanel(this, data);
  };

  return EsyUiWindow;

})();

EsyUiPanel = (function() {
  function EsyUiPanel(window, data) {
    this.window = window;
    this.data = data;
    this.paddingLeft = 10;
    this.paddingTop = 10;
    this.width = 300;
    this.element = null;
    this.yOffset = 0;
    this.render();
    return this;
  }

  EsyUiPanel.prototype.render = function() {
    var values;
    values = [this.paddingLeft, this.paddingTop, this.width, 60];
    this.element = this.window.element.add('panel', values, this.data.label);
    return this;
  };

  EsyUiPanel.prototype.addRow = function(data) {
    return new EsyUiRow(this, data);
  };

  return EsyUiPanel;

})();

EsyUiRow = (function() {
  function EsyUiRow(panel, data) {
    this.panel = panel;
    this.data = data;
    this.height = 30;
    this.width = 100;
    this.paddingLeft = 10;
    this.paddingTop = this.panel.paddingTop + 10;
    this.xOffset = this.panel.element.margins[0];
    this.yOffset = this.panel.element.margins[1] + this.panel.yOffset;
    this.render();
    return this.panel;
  }

  EsyUiRow.prototype.render = function() {
    var element, elementType, elements, _i, _len, _ref;
    _ref = this.data;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      elements = _ref[_i];
      for (elementType in elements) {
        element = elements[elementType];
        switch (elementType) {
          case "button":
            this.addButton(element);
            break;
          case "textbox":
            this.addTextbox(element);
        }
      }
    }
    this.panel.element.size[1] += this.height;
    return this;
  };

  EsyUiRow.prototype.addButton = function(element) {
    return new EsyUiButton(this, element);
  };

  EsyUiRow.prototype.addTextbox = function(element) {
    return new EsyUiTextbox(this, element);
  };

  return EsyUiRow;

})();

EsyUiButton = (function() {
  function EsyUiButton(row, data) {
    this.data = data;
    this.row = row;
    this.panel = this.row.panel;
    this.render();
    return this;
  }

  EsyUiButton.prototype.render = function() {
    var values, _base, _base1, _base2, _base3;
    if ((_base = this.data).height == null) {
      _base.height = this.row.height;
    }
    if ((_base1 = this.data).width == null) {
      _base1.width = this.row.width;
    }
    if ((_base2 = this.data).paddingLeft == null) {
      _base2.paddingLeft = 10;
    }
    if ((_base3 = this.data).paddingTop == null) {
      _base3.paddingTop = 0;
    }
    values = [this.data.paddingLeft + this.row.xOffset, this.data.paddingTop + this.row.yOffset, this.panel.element.size[0] * this.data.width / 100 + this.row.xOffset - this.panel.element.margins[0], this.data.paddingTop + this.data.height + this.row.yOffset];
    this.row.xOffset = this.panel.element.size[0] * (this.data.width / 100) + this.row.xOffset;
    this.panel.yOffset += this.data.paddingTop + this.data.height;
    this.panel.window.element.add('button', values, this.data.label);
    return this;
  };

  return EsyUiButton;

})();

EsyUiTextbox = (function() {
  function EsyUiTextbox(row, data) {
    this.data = data;
    this.row = row;
    this.panel = this.row.panel;
    this.render();
    return this;
  }

  EsyUiTextbox.prototype.render = function() {
    var values, _base, _base1, _base2, _base3;
    if ((_base = this.data).height == null) {
      _base.height = this.row.height;
    }
    if ((_base1 = this.data).width == null) {
      _base1.width = this.row.width;
    }
    if ((_base2 = this.data).paddingLeft == null) {
      _base2.paddingLeft = this.row.paddingLeft;
    }
    if ((_base3 = this.data).paddingTop == null) {
      _base3.paddingTop = this.row.paddingTop;
    }
    values = [this.data.paddingLeft + this.row.xOffset, this.data.paddingTop + this.row.yOffset, this.panel.element.size[0] * this.data.width / 100 + this.row.xOffset - this.panel.element.margins[0], this.data.paddingTop + this.data.height + this.row.yOffset];
    this.row.xOffset = this.panel.element.size[0] * (this.data.width / 100) + this.row.xOffset;
    this.panel.yOffset += this.data.paddingTop + this.panel.element.margins[1] + this.data.height;
    this.panel.window.element.add('editText', values, this.data.label);
    return this;
  };

  return EsyUiTextbox;

})();
