// Generated by CoffeeScript 1.7.1
var Esy;

Esy = (function() {
  function Esy() {}

  Esy.prototype.initialize = function() {
    this.ui = new EsyUi;
    this.http = new EsyHttp;
    this.file = new EsyFile;
    this.color = new EsyColor;
    return this.selfBuild();
  };

  Esy.prototype.selfBuild = function() {
    var destination, file, source;
    source = (new File($.fileName)).parent;
    destination = source.parent.path;
    if (esy.debug) {
      return file = esy.file.buildExtendScript("" + source.path + "/esy.js", "" + destination + "/esy.jsx");
    } else {

    }
  };

  Esy.prototype.listProperties = function(obj) {
    var property, _i, _ref, _results;
    this.log("Esy.listProperties:");
    _results = [];
    for (property = _i = 1, _ref = obj.numProperties; 1 <= _ref ? _i <= _ref : _i >= _ref; property = 1 <= _ref ? ++_i : --_i) {
      _results.push(this.log(property));
    }
    return _results;
  };

  Esy.prototype.log = function(str) {
    try {
      return $.write("" + (str != null ? str.toString() : void 0) + "\n");
    } catch (_error) {}
  };

  Esy.prototype.dump = function(obj) {
    var propertyName, propertyValue, _results;
    if (obj) {
      this.log("Esy.dump:");
      _results = [];
      for (propertyName in obj) {
        propertyValue = obj[propertyName];
        _results.push(this.log("" + propertyName + ": " + (propertyValue != null ? propertyValue.toString() : void 0) + " \n"));
      }
      return _results;
    }
  };

  Esy.prototype.extend = function(sourceObject, defaultObject) {
    var propertyName, propertyValue;
    for (propertyName in defaultObject) {
      propertyValue = defaultObject[propertyName];
      if (!sourceObject[propertyName]) {
        sourceObject[propertyName] = propertyValue;
      }
    }
    return sourceObject;
  };

  return Esy;

})();
