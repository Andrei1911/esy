// Generated by CoffeeScript 1.7.1
var Esy, dump, log;

Esy = (function() {
  function Esy() {}

  Esy.prototype.initialize = function() {
    this.ui = new EsyUi;
    this.http = new EsyHttp;
    this.file = new EsyFile;
    this.project = new EsyProject;
    this.color = new EsyColor;
    if (esy.debug) {
      return this.selfBuild((new File($.fileName)).parent.parent.path);
    } else {
      this.updater = new EsyUpdater({
        repo: "seblavoie/esy",
        file: "esy.jsx",
        version: "v0.0.2",
        destination: "" + Folder.appPackage.path + "/Scripts/startup"
      });
      return this.updater.checkForUpdate();
    }
  };

  Esy.prototype.selfBuild = function(path) {
    return esy.file.buildExtendScript("" + path + "/lib/esy.js", ["" + path + "/esy.jsx"]);
  };

  Esy.prototype.listProperties = function(obj) {
    var property, _i, _ref, _results;
    this.log("Esy.listProperties:");
    _results = [];
    for (property = _i = 1, _ref = obj.numProperties; 1 <= _ref ? _i <= _ref : _i >= _ref; property = 1 <= _ref ? ++_i : --_i) {
      _results.push(this.log(property));
    }
    return _results;
  };

  Esy.prototype.log = function(str) {
    try {
      return $.write("" + (str != null ? str.toString() : void 0) + "\n");
    } catch (_error) {}
  };

  Esy.prototype.dump = function(obj, name, line) {
    var propertyName, propertyValue;
    if (line == null) {
      line = true;
    }
    if (obj) {
      if (name == null) {
        name = "[" + (typeof obj) + "]";
      }
      if (line) {
        this.log("\n------------------------");
      }
      this.log("Dump of " + name + ":\n");
      for (propertyName in obj) {
        propertyValue = obj[propertyName];
        this.log("  " + propertyName + ": " + (propertyValue != null ? propertyValue.toString() : void 0) + " \n");
      }
      if (line) {
        return this.log("------------------------");
      }
    }
  };

  Esy.prototype.extend = function(sourceObject, defaultObject) {
    var propertyName, propertyValue;
    for (propertyName in defaultObject) {
      propertyValue = defaultObject[propertyName];
      if (!sourceObject[propertyName]) {
        sourceObject[propertyName] = propertyValue;
      }
    }
    return sourceObject;
  };

  return Esy;

})();

log = function(log) {
  return esy.log(log);
};

dump = function(obj, name, line) {
  if (line == null) {
    line = true;
  }
  return esy.dump(obj, name, line);
};
